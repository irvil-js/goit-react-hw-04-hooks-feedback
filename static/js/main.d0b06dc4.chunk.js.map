{"version":3,"sources":["components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","Statistics","good","neutral","bad","total","positivePercentage","list","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","name","onClick","Notification","message","notification","App","useState","setGood","setNeutral","setBad","setTotal","percentage","setPercentage","useEffect","Math","ceil","target","prevGood","prevNeutral","prevBad","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,SAAW,6BAA6B,KAAO,2B,gBCAjED,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,OAAS,kC,gBCAtFD,EAAOC,QAAU,CAAC,aAAe,qC,8HCWlBC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,gBCOQI,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAIR,UAAWC,IAAOQ,KAAtB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,W,gBCeWE,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEd,UAAWC,IAAOc,OAElBC,KAAK,SACLC,KAAMH,EACNI,QAASN,EALX,SAOGE,GALIA,S,gBCDEK,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGpB,UAAWC,IAAOoB,aAArB,SAAoCD,KCsE9BE,MArEf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOnB,EAAP,KAAaoB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBoB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOjB,EAAP,KAAYoB,EAAZ,KACA,EAA0BH,mBAAS,GAAnC,mBAAOhB,EAAP,KAAcoB,EAAd,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAuCA,OArCAC,qBAAU,WACRH,EAASvB,EAAOC,EAAUC,KACzB,CAACF,EAAMC,EAASC,IAEnBwB,qBAAU,WACRD,EAAcE,KAAKC,KAAM,IAAMzB,EAASH,MACvC,CAACG,EAAOH,IAgCT,qCACE,cAAC,EAAD,CAASN,MAAM,wBAAf,SACE,cAAC,EAAD,CACEa,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAlCe,SAAC,GAGtB,OAHqC,EAAbqB,OAChBhB,MAGN,IAAK,OACHO,GAAQ,SAAAU,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHT,GAAW,SAAAU,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHT,GAAO,SAAAU,GAAO,OAAIA,EAAU,KAC5B,MACF,QACE,aAuBF,cAAC,EAAD,CAAStC,MAAM,aAAf,SACGS,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBoB,IAGtB,cAAC,EAAD,CAAcR,QAAQ,4B,YC5DhCiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d0b06dc4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3w3J8\",\"title\":\"Section_title__2pb_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__2AVhW\",\"list\":\"Statistics_list__2Rw2b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FeedbackOptions_buttonContainer__3B4XC\",\"button\":\"FeedbackOptions_button__wkm5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__25yNV\"};","import React from \"react\";\nimport styles from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.section}>\n      <h2 className={styles.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className={styles.list}>\n    <li>Good: {good}</li>\n    <li>Neutral: {neutral}</li>\n    <li>Bad: {bad}</li>\n    <li>Total: {total}</li>\n    <li>Positive feedback: {positivePercentage}%</li>\n  </ul>\n);\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  props: PropTypes.shape({\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    total: PropTypes.number,\n    positivePercentage: PropTypes.number,\n  }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <>\n    {options.map(option => (\n      <button\n        className={styles.button}\n        key={option}\n        type=\"button\"\n        name={option}\n        onClick={onLeaveFeedback}\n      >\n        {option}\n      </button>\n    ))}\n  </>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => {\n  return <p className={styles.notification}>{message}</p>;\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [percentage, setPercentage] = useState(0);\n\n  useEffect(() => {\n    setTotal(good + neutral + bad);\n  }, [good, neutral, bad]);\n\n  useEffect(() => {\n    setPercentage(Math.ceil((100 / total) * good));\n  }, [total, good]);\n\n  const handleFeedback = ({ target }) => {\n    const { name } = target;\n\n    switch (name) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  // const countTotalFeedback = () => {\n  //   const total = good + neutral + bad;\n  //   return total;\n  // };\n\n  // const countPositiveFeedbackPercentage = () => {\n  // const positiveFeedback = Math.round((good / countTotalFeedback) * 100);\n  // return positiveFeedback ? positiveFeedback : 0;\n  //   return Math.round((good / countTotalFeedback()) * 100) || 0;\n  // };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={handleFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {total > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={percentage}\n          ></Statistics>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}